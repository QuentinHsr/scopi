#include <xtensor/xmath.hpp>
#include <scopi/object/superellipsoid.hpp>
#include "../mosek_solver.hpp"
#include <random>

int main()
{
    constexpr std::size_t dim = 2;
    double PI = xt::numeric_constants<double>::PI;
    double dt = .1;
    std::size_t total_it = 6000;
    scopi::scopi_container<dim> particles;

    std::default_random_engine generator;
    std::uniform_real_distribution<double> distrib_e(0.1,1.0);
    std::uniform_real_distribution<double> distrib_r(0.1,1.0);
    std::uniform_real_distribution<double> distrib_gp1(2.0,10.0);
    std::uniform_real_distribution<double> distrib_gp2(-10.0,-2.0);
    std::uniform_real_distribution<double> distrib_rot(0,PI);

    // scopi::superellipsoid<dim> s0({{0.0, 0.}}, {scopi::quaternion(-PI/4)}, {{.01, .01}}, {{0.2}});
    // s0.print();
    // scopi::superellipsoid<dim> s1({{-0.2, 0.}}, {scopi::quaternion(PI/4)}, {{.1, .05}}, {{0.2}});
    // s1.print();
    // scopi::superellipsoid<dim> s2({{0.2, 0.}}, {scopi::quaternion(-PI/4)}, {{.1, .05}}, {{1.}});
    // s2.print();
    // particles.push_back(s0, {{0, 0}}, {{0., 0}}, 0, 0, {{0, 0}});
    // particles.push_back(s1, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // particles.push_back(s2, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});

    // int n = 20;
    //
    // for (int i=0;i<n;++i){
    //   std::cout << i << std::endl;
    //   const double e = distrib_e(generator);
    //   scopi::superellipsoid<dim> s({{distrib_gp1(generator), distrib_gp1(generator)}},
    //     {scopi::quaternion(distrib_rot(generator))}, {{distrib_r(generator), distrib_r(generator)}},
    //     {{e}});
    //   s.print();
    //   particles.push_back(s, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // }
    // // exit(0);

    // scopi::superellipsoid<dim> s0({{-3.015341211036384,2.5638130661635756}}, {scopi::quaternion(2.8286081085681785)}, {{0.33656700575748905,0.5926147821433406}}, {{0.9712165121121024}});
    // particles.push_back(s0, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s1({{-3.249578843481461,1.8697654929674457}}, {scopi::quaternion(0.07948256106041364)}, {{0.6486354580118924,0.5236472666685622}}, {{0.9572176183189882}});
    // particles.push_back(s1, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s2({{-3.5256502494267785,-0.866278641123321}}, {scopi::quaternion(2.750882144009536)}, {{0.4075697610219307,0.40694091565735935}}, {{0.8154011904544411}});
    // particles.push_back(s2, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s3({{-6.070154017545848,-1.5802261142614258}}, {scopi::quaternion(1.1258362320512805)}, {{0.42482153098505904,0.8165225426721885}}, {{0.3043519046151457}});
    // particles.push_back(s3, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s4({{-9.296187219030827,4.856906247903474}}, {scopi::quaternion(1.2400199798291616)}, {{0.8480498819984519,0.32466457495174156}}, {{0.5867120396087926}});
    // particles.push_back(s4, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s5({{-8.340425643356166,1.1944095152018726}}, {scopi::quaternion(2.5394593772869807)}, {{0.9162102028574253,0.8963483185458123}}, {{0.644751585152499}});
    // particles.push_back(s5, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s6({{-9.381239278153455,-3.292853312088181}}, {scopi::quaternion(0.47286184570085676)}, {{0.5489082547785527,0.9823295561433747}}, {{0.8723750239961052}});
    // particles.push_back(s6, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s7({{-7.875216137813468,1.9395013297902537}}, {scopi::quaternion(2.2857892020776247)}, {{0.4334767297295495,0.5767824499026366}}, {{0.5170776375529587}});
    // particles.push_back(s7, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s8({{-6.620667488962514,-3.6071830902165916}}, {scopi::quaternion(0.30618704092007465)}, {{0.967106383485014,0.4151062596057851}}, {{0.9452912264545563}});
    // particles.push_back(s8, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s9({{-7.708582685289634,-5.477117978182058}}, {scopi::quaternion(0.35795907953140366)}, {{0.5103857480166059,0.3816330949323031}}, {{0.31709523439331433}});
    // particles.push_back(s9, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s10({{-6.233669086318606,-3.670687987645245}}, {scopi::quaternion(1.4879191704673718)}, {{0.3760790013320767,0.6973730441989113}}, {{0.2518496574680317}});
    // particles.push_back(s10, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s11({{-3.0583821427155033,4.660682850135727}}, {scopi::quaternion(2.3949523087398816)}, {{0.4887877861227028,0.7227432816860365}}, {{0.21320471134533722}});
    // particles.push_back(s11, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s12({{-4.0783569247288405,3.627314592671489}}, {scopi::quaternion(0.994166707920202)}, {{0.7889674050867435,0.5240581676106817}}, {{0.8085002180314642}});
    // particles.push_back(s12, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s13({{-8.402595349839164,-3.2883737013457526}}, {scopi::quaternion(3.053357812187444)}, {{0.8286005499606512,0.4414609156882624}}, {{0.8860710798622711}});
    // particles.push_back(s13, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s14({{-6.623766462472736,1.6590527885497526}}, {scopi::quaternion(1.7861595576676297)}, {{0.891029317788544,0.33760360587119}}, {{0.9026080854980936}});
    // particles.push_back(s14, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s15({{-7.871804054440143,-5.89195238314975}}, {scopi::quaternion(1.7154171486158596)}, {{0.40893388624808,0.6582825550818482}}, {{0.5588558709300697}});
    // particles.push_back(s15, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s16({{-6.712784720556183,4.538785345361189}}, {scopi::quaternion(2.794527724943002)}, {{0.5787807802019088,0.7147143801482579}}, {{0.26589614024621916}});
    // particles.push_back(s16, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s17({{-7.828805658679247,4.506361404746375}}, {scopi::quaternion(1.1304235056710088)}, {{0.31780231449961255,0.6333851946116025}}, {{0.7114654372221367}});
    // particles.push_back(s17, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s18({{-5.932821052850269,-4.456274090630909}}, {scopi::quaternion(2.587162305990901)}, {{0.3807818731026897,0.7009356959333899}}, {{0.30448383775288823}});
    // particles.push_back(s18, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s19({{-4.214124237297448,0.30972468768249506}}, {scopi::quaternion(2.2981762788596134)}, {{0.9554838435877968,0.6122364986053004}}, {{0.5833164305880107}});
    // particles.push_back(s19, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    // // ---------------------------
    // scopi::superellipsoid<dim> s20({{6.557103557718136,-2.588791507691806}}, {scopi::quaternion(2.8232963138493656)}, {{0.8786538309554193,0.8552867657393932}}, {{0.6555250055300763}});
    // particles.push_back(s20, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s21({{7.566343402626805,-1.3121881402747384}}, {scopi::quaternion(0.023652062321251006)}, {{0.33127242491702974,0.7662438654600063}}, {{0.7653834954728278}});
    // particles.push_back(s21, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s22({{9.260213568361962,-3.764406468817612}}, {scopi::quaternion(2.3927275294440946)}, {{0.6515979932134603,0.8987936116504569}}, {{0.41586672101389627}});
    // particles.push_back(s22, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s23({{9.398162641944172,0.2799958185712548}}, {scopi::quaternion(2.6804808647071057)}, {{0.9204612036116904,0.4132542493872529}}, {{0.4811760665189188}});
    // particles.push_back(s23, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s24({{9.99640564092938,2.291967050669271}}, {scopi::quaternion(2.795887196018914)}, {{0.8207578838927343,0.4028099051382364}}, {{0.8222004145740447}});
    // particles.push_back(s24, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s25({{2.0720529645308323,-3.79153244806951}}, {scopi::quaternion(2.4127263283289944)}, {{0.3953424409124927,0.42781161540535706}}, {{0.3055262367431489}});
    // particles.push_back(s25, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s26({{3.6809165668882455,-5.836440109869272}}, {scopi::quaternion(0.4988594827084319)}, {{0.6707374432599671,0.8789580749942603}}, {{0.2806646915679733}});
    // particles.push_back(s26, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s27({{3.2123196292546634,1.3137875590567525}}, {scopi::quaternion(1.9915356317587054)}, {{0.6069091853617361,0.48937343200563865}}, {{0.8455968114135444}});
    // particles.push_back(s27, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s28({{4.112739300777998,-1.568896412276322}}, {scopi::quaternion(0.3361422766908143)}, {{0.8058689966329411,0.4059508926711453}}, {{0.6387268465943687}});
    // particles.push_back(s28, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s29({{5.964290567308442,-1.755876792147233}}, {scopi::quaternion(2.5450557826277964)}, {{0.9435309853028306,0.563395652448454}}, {{0.30236148986268}});
    // particles.push_back(s29, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s30({{9.68827652129184,4.242661373178292}}, {scopi::quaternion(3.0534349400331355)}, {{0.8322477610020722,0.7410760413637167}}, {{0.3359752133133411}});
    // particles.push_back(s30, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s31({{3.4875499497543636,5.781495618539717}}, {scopi::quaternion(1.7403335574527805)}, {{0.765607358401308,0.9839889812604159}}, {{0.5470314471498501}});
    // particles.push_back(s31, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s32({{8.290040783560107,-0.332357588347735}}, {scopi::quaternion(2.3266153818093955)}, {{0.3859069079870489,0.38537804058582065}}, {{0.4459888725832893}});
    // particles.push_back(s32, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s33({{2.689282980515231,0.9782868550988146}}, {scopi::quaternion(1.9674265290655266)}, {{0.5550987347020624,0.6993396239514543}}, {{0.8114334275957475}});
    // particles.push_back(s33, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s34({{3.670418351793269,-0.8961788656113621}}, {scopi::quaternion(1.8969094858367859)}, {{0.31282118099890477,0.5836720567974663}}, {{0.4738707624603191}});
    // particles.push_back(s34, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s35({{6.0809118841689065,1.7958429449789204}}, {scopi::quaternion(2.8901182576381195)}, {{0.5826315603296954,0.43027484743598166}}, {{0.939863800500065}});
    // particles.push_back(s35, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s36({{4.2950040698309175,2.8720117891194388}}, {scopi::quaternion(0.4003027210097273)}, {{0.8225184510662069,0.5725177351390286}}, {{0.8862896210693003}});
    // particles.push_back(s36, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s37({{7.734747263304815,2.9778704500122046}}, {scopi::quaternion(1.7787620965817736)}, {{0.5599091245758963,0.4747001309923855}}, {{0.5327387002410743}});
    // particles.push_back(s37, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s38({{8.62135196629671,-3.3802049626338473}}, {scopi::quaternion(0.35619063582310134)}, {{0.8496580119295571,0.546613534676947}}, {{0.2735656867819053}});
    // particles.push_back(s38, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});
    // scopi::superellipsoid<dim> s39({{2.1836722444185286,5.041996607925091}}, {scopi::quaternion(1.0110303945985772)}, {{0.6347677958428373,0.6128309452693601}}, {{0.99219052344761}});
    // particles.push_back(s39, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});


    for(std::size_t i = 0; i < particles.size(); ++i)
    {
        std::cout << " i = " << i <<" particles.size() = " << particles.size() << "\n";
        particles[i]->print();
    }
    // exit(0);

    scopi::superellipsoid<dim> s0({{0.0, 0.}}, {scopi::quaternion(-PI/4)}, {{.01, .01}}, {{0.2}});
    scopi::superellipsoid<dim> s1({{-0.2, 0.}}, {scopi::quaternion(PI/4)}, {{.1, .05}}, {{0.2}});
    scopi::superellipsoid<dim> s2({{0.2, 0.}}, {scopi::quaternion(-PI/4)}, {{.1, .05}}, {{1.}});
    particles.push_back(s0, {{0, 0}}, {{0., 0}}, 0, 0, {{0, 0}});
    particles.push_back(s1, {{0, 0}}, {{0.25, 0}}, 0, 0, {{0, 0}});
    particles.push_back(s2, {{0, 0}}, {{-0.25, 0}}, 0, 0, {{0, 0}});

    std::size_t active_ptr = 1;
    // std::size_t active_ptr = 0; // pas d'obstacles

    mosek_solver(particles, dt, total_it, active_ptr);

    return 0;
}
